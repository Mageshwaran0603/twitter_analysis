**Aim:**
The aim of this project is to analyze a social network dataset using Hadoop MapReduce for processing and generating outputs, and then visualize the results using Python with the NetworkX library.

**Objective:**
The objective is to identify mutual friendships within a social network dataset and visualize the network graph to gain insights into the connections between users and their mutual friends.

**Tool Used:**
- Hadoop: Used for processing large-scale data using the MapReduce framework.
- Python with NetworkX library: Used for data visualization and analysis.

**Description:**
The project involves two main stages: data processing with Hadoop MapReduce and data visualization with Python. 
1. **Data Processing with Hadoop:**
   - Input: Social network dataset containing user and friend connections.
   - MapReduce Job: The Hadoop MapReduce job identifies mutual friends between users in the dataset.
   - Output: The output contains user pairs along with their mutual friends.

2. **Data Visualization with Python:**
   - Input: Output file generated by Hadoop containing user pairs and mutual friends.
   - Python Script: Reads the output file, parses the data, creates a graph representing the social network, and visualizes it using NetworkX and Matplotlib.
   - Output: Visual representation of the social network graph with nodes representing users, edges representing friendships, and labels indicating mutual friends.

**Prerequisite:**
- Hadoop installed and configured for running MapReduce jobs.
- Python environment set up with necessary libraries including NetworkX and Matplotlib.


**Project Process:**

1. **Data Collection:**
   - Obtain the social network dataset containing user and friend connections. This dataset can be obtained from various sources such as social media platforms or generated synthetically for testing purposes.

2. **Data Preparation:**
   - Format the dataset appropriately for processing by Hadoop MapReduce. Each line of the dataset should represent a user and their list of friends in a structured format.

3. **Hadoop MapReduce Job:**
   - Write the MapReduce code to process the dataset and identify mutual friendships.
   - The Mapper function reads each line of the input dataset and emits key-value pairs, where the key is a user pair and the value is the list of common friends.
   - The Reducer function aggregates the common friends for each user pair and generates the final output.

4. **Run Hadoop Job:**
   - Upload the input dataset to the Hadoop Distributed File System (HDFS).
   - Execute the MapReduce job on the Hadoop cluster using the `hadoop jar` command, specifying the input and output paths, as well as the Mapper and Reducer scripts.

5. **Output Generation:**
   - After the MapReduce job completes, the output file containing user pairs and their mutual friends is generated in the specified output directory on HDFS.

6. **Transfer Output to Local Filesystem:**
   - Use the `hdfs dfs -copyToLocal` command to copy the output file from HDFS to the local filesystem.
   - Specify the HDFS path of the output file and the destination directory on the local filesystem.

7. **Data Visualization with Python:**
   - Develop a Python script using libraries such as NetworkX and Matplotlib to read the output file, create a network graph, and visualize the social network.
   - Parse the output file to extract user pairs and their mutual friends.
   - Create a graph representation of the social network where nodes represent users and edges represent friendships.
   - Customize the visualization to enhance readability, such as adjusting node colors, edge thickness, and layout algorithms.
   - Add labels and legends to provide context and information about the graph.

8. **Visualization Execution:**
   - Run the Python script to execute the data visualization process.
   - The script should generate a graphical representation of the social network, displaying the relationships between users and their mutual friends.

9. **Analysis and Interpretation:**
   - Analyze the visualized social network graph to gain insights into the network structure, including central users, communities, and influential nodes.
   - Interpret the findings to understand the patterns of connections, identify clusters of users with strong ties, and explore potential trends or anomalies within the network.

**Program & Output:**
- Hadoop MapReduce Program:
  - Program takes the social network dataset as input and generates an output file containing user pairs and their mutual friends.
- Python Visualization Program:
  - Program reads the output file, creates a network graph, and visualizes the social network using NetworkX and Matplotlib.

**Insights:**
- The visualization provides insights into the social network structure, highlighting user connections and mutual friendships.
- It allows for the identification of central users with many mutual connections and peripheral users with fewer connections.

**Result:**
- The result is a visual representation of the social network graph, which aids in understanding the relationships and connections within the network.

**Conclusion:**
This project demonstrates the integration of Hadoop MapReduce for data processing and Python for data visualization to analyze a social network dataset. By leveraging Hadoop's parallel processing capabilities and Python's visualization libraries, insights into the social network structure can be gained effectively, enabling better understanding and decision-making.